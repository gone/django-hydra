project_name:
  type: str
  help: >-
    Project name - used as both the Python package name and service name.
    Must be lowercase, start with a letter, and use only letters and underscores.
    Examples: my_project, awesome_django_app
  validator: >-
    {% if not project_name %}
    Project name cannot be empty
    {% endif %}
    {% if not (project_name | regex_match('^[a-z][a-z_]*[a-z]$')) %}
    Project name must be lowercase, start and end with a letter, and contain only letters and underscores
    {% endif %}
    {% if '_-' in project_name or '-_' in project_name or '__' in project_name %}
    Project name cannot contain consecutive separators
    {% endif %}
    {% if project_name | length > 50 %}
    Project name must be less than 50 characters
    {% endif %}

project_name_verbose:
  type: str
  help: Human-friendly project name
  default: "{{ project_name | replace('_', ' ') | title }}"

author_name:
  type: str
  help: Author's name for pyproject and django admins
  default: Anonymous

domain_name:
  type: str
  help: Production domain name
  default: example.com

author_email:
  type: str
  help: Author's email for pyproject and django admins
  default: "{{ author_name | lower | replace(' ', '-') }}@{{domain_name}}"

description:
  type: str
  multiline: true
  help: A short description of the project
  default: A short description of the project.

version:
  type: str
  help: Initial version number
  default: 0.1.0

_subdirectory: template

# Templates Customization
_envops:
  block_end_string: "%]"
  block_start_string: "[%"
  comment_end_string: "#]"
  comment_start_string: "[#"
  keep_trailing_newline: true
  variable_end_string: "]]"
  variable_start_string: "[["

_tasks:
  - "chmod +x manage.py"
  - "chmod +x scripts/*.sh"

_message_after_copy: |
 Project successfully created!
 For new projects, run `uv new-project` from the project root to:
   - setup database
   - install python packages
   - install node packages
