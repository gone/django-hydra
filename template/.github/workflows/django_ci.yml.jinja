name: Django CI
on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  precommit:
    name: Precommit linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/mise
            node_modules
          key: precommit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml', '**/package-lock.json') }}
          restore-keys: |
            precommit-${{ runner.os }}-

      - uses: jdx/mise-action@v2
      - run: npm install
      - run: mise pre-commit --all-files --color=always ${{ inputs.extra_args }}

  test:
    name: Django CI
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: "psql://postgres:postgres@localhost/postgres"
      DJANGO_SETTINGS_MODULE: "[[project_name]].config.settings.test"
      DJANGO_SECRET_KEY: "!!!! Change me !!!!"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.cache/mise
            ~/.cache/ms-playwright
            node_modules
          key: ${{ runner.os }}-deps-${{ hashFiles('**/uv.lock', '**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-deps-
      - uses: jdx/mise-action@v2
      - name: Install env
        run: |
          mise setup-js
          mise uv
          playwright install chromium

      - name: Run tests
        run: mise test-all --cov

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres

        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

  dependabot_approve:
    name: Auto Merge Dependabot prs
    if: ${{ github.actor == 'dependabot[bot]' }}
    runs-on: ubuntu-latest

    permissions:
      pull-requests: write
      contents: write
    needs: test

    steps:
      - uses: dependabot/fetch-metadata@v2
      - run: gh pr review --approve "$PR_URL" && gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
